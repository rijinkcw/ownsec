#!/bin/bash
###############################
#
##################################################
######################   3.Exploitation-Tools   #
################################################

BASEDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/3.Exploitation-Tools

MAIN () {
	METASPLOIT_FRAMEWORK () {
		cd $BASEDIR/metasploit-framework
		./metasploit-setup-install.sh
	}
	ARMITAGE () {
		cd $BASEDIR/armitage
		./armitage-setup-install.sh
	}
	CLUSTERED () {
		cd $BASEDIR/clusterd
		./clusterd-install.sh
	}
	CRACKMAPEXEC () {
		cd $BASEDIR/crackmapexec
		./crackmapexec-install.sh
	}
	DRACMAP ()  {
		cd $BASEDIR/dracnmap
		./dracnmap-install.sh
	}
	EVILGRADE () {
		cd $BASEDIR/evilgrade
		./evilgrade-install.sh
	}
	HAKKUFRAMEWORK () {
		cd $BASEDIR/hakkuframework
		./hakkuframework-install.sh
	}
	JBOSS_AUTOPWN () {
		cd $BASEDIR/jboss-autopwn
		./jboss-autopwn-install.sh
	}
	PENBOX () {
		cd $BASEDIR/penbox
		./penbox-install.sh
	}
	PENTEST () {
		cd $BASEDIR/pentest
		./pentest-install.sh
	}
	POCSUITE () {
		cd $BASEDIR/pocsuite
		./Pocsuite-install.sh
	}
	SPRAYWMI () {
		cd $BASEDIR/spraywmi
		./spraywmi-install.sh
	}
	TPLMAP () {
		cd $BASEDIR/tplmap
		./tplmap-install.sh
	}
	WEBSPLOIT () {
		cd $BASEDIR/websploit
		./websploit-install.sh
	}
	ZARP () {
		cd $BASEDIR/zarp
		./zarp-install.sh
	}
	INTERSECT () {
		cd $BASEDIR/intersect-2-5
		./intersect-2.5-install.sh
	}
	ROUTERSPLOIT () {
		cd $BASEDIR/routersploit
		./routersploit-install.sh
	}
	
	METASPLOIT_FRAMEWORK
	ARMITAGE
	CLUSTERED
	CRACKMAPEXEC
	DRACMAP
	EVILGRADE
	HAKKUFRAMEWORK
	JBOSS_AUTOPWN
	PENBOX
	PENTEST
	POCSUITE
	SPRAYWMI
	TPLMAP
	WEBSPLOIT
	ZARP
	INTERSECT
	ROUTERSPLOIT
	
	
	
}

SEARCHDB () {
	SEARCHSPLOIT () {
		cd $BASEDIR/2.Search/searchsploit
		./searchsploit-install.sh
	}
	EXPLOIT_DATABASE () {
		cd $BASEDIR/2.Search/exploit-database
		./exploit-database-install.sh
	}
	EXPLOITDB () {
		cd $BASEDIR/2.Search/exploitdb
		./exploitdb-install.sh
	}
	FINDSPLOIT () {
		cd $BASEDIR/2.Search/findsploit
		./findsploit-install.sh
	}
	SEARCHSPLOIT
	EXPLOIT_DATABASE
	EXPLOITDB
	FINDSPLOIT

}

SHELLGEN () {
	L0L () {
		cd $BASEDIR/3.Shellcode-gen/l0l 
		./l0l-install.sh
	}
	OWASP_ZSC () {
		cd $BASEDIR/3.Shellcode-gen/owasp-zsc
		./owasp-zsc-install.sh
	}
	SHELLNOOB () {
		cd $BASEDIR/3.Shellcode-gen/shellnoob
		./shellnoob-install.sh # exec w snoob
	}
# L0L # temp disabled - owner github acc closed, repo not avail.
OWASP_ZSC
SHELLNOOB
}

MSFPAYLOAD () {
	LIBENOM () {
		cd $BASEDIR/4.MSF_payload-generator/libenom
		./libenom-install.sh
	}
	MPC () {
		cd $BASEDIR/4.MSF_payload-generator/mpc
		./mpc-install.sh
	}
	SHARPMETER () {
		cd $BASEDIR/4.MSF_payload-generator/sharpmeter
		./sharpmeter-install.sh
	}
LIBENOM
MPC
SHARPMETER
	
}

SEPHISHING () {
	BEEF () {
		cd $BASEDIR/5.SE_Phishing/beef
		./beef-install.sh
	}
	PHISHINGFRENZY () {
		cd $BASEDIR/5.SE_Phishing/phishing-frenzy 
		./phishing-frenzy-install.sh
	}
	WEEMAN () {
		cd $BASEDIR/5.SE_Phishing/weeman
		./weeman-install.sh
	}
	GHOST_PHISHER () {
		cd $BASEDIR/5.SE_Phishing/ghost-phisher
		./ghost-phisher-install.sh # ruby
	}
	SE_TOOLKIT () {
		cd $BASEDIR/5.SE_Phishing/se-toolkit
		./social-engineering-toolkit-install.sh
	}
BEEF
# PHISHINGFRENZY # ?
WEEMAN
GHOST_PHISHER
SE_TOOLKIT #msf path config missing

}

OBFUSCATION () {
	echo "palceholder"
	# cd $BASEDIR/6.Obfuscation

}

DEVICES () {
	echo "placeholder"
	# cd $BASEDIR/8.Devices/

}